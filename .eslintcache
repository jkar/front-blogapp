[{"C:\\Users\\User\\Desktop\\blogapp\\src\\index.js":"1","C:\\Users\\User\\Desktop\\blogapp\\src\\App.js":"2","C:\\Users\\User\\Desktop\\blogapp\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Main.js":"4","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Header\\Header.js":"5","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Blog\\Blog.js":"6","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\ShowPosts\\ShowPosts.js":"7","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Posts\\Posts.js":"8","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Post\\Post.js":"9","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Category\\Category.js":"10","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\CreateCategory\\CreateCategory.js":"11","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\CreatePost\\CreatePost.js":"12","C:\\Users\\User\\Desktop\\blogapp\\src\\API.js":"13","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\LogIn\\LogIn.js":"14","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Notification\\Notification.js":"15"},{"size":544,"mtime":1612286648619,"results":"16","hashOfConfig":"17"},{"size":1732,"mtime":1613147242586,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":204,"mtime":1612430630927,"results":"20","hashOfConfig":"17"},{"size":756,"mtime":1613062580380,"results":"21","hashOfConfig":"17"},{"size":2327,"mtime":1613135574008,"results":"22","hashOfConfig":"17"},{"size":526,"mtime":1612434688672,"results":"23","hashOfConfig":"17"},{"size":785,"mtime":1613041357908,"results":"24","hashOfConfig":"17"},{"size":1596,"mtime":1613139439297,"results":"25","hashOfConfig":"17"},{"size":1552,"mtime":1613141711743,"results":"26","hashOfConfig":"17"},{"size":2206,"mtime":1613229267279,"results":"27","hashOfConfig":"17"},{"size":4284,"mtime":1613233693819,"results":"28","hashOfConfig":"17"},{"size":69,"mtime":1613042070123,"results":"29","hashOfConfig":"17"},{"size":1885,"mtime":1613062502765,"results":"30","hashOfConfig":"17"},{"size":693,"mtime":1613232273874,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"dhisjs",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\blogapp\\src\\index.js",[],["66","67"],"C:\\Users\\User\\Desktop\\blogapp\\src\\App.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Main.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Header\\Header.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Blog\\Blog.js",["68"],"import React, {useState, useEffect} from \"react\";\r\nimport { Route, Switch, Link, useHistory } from 'react-router-dom';\r\nimport { useParams } from \"react-router-dom\";\r\nimport './Blog.css';\r\nimport axios from \"axios\";\r\nimport Post from \"../Post/Post\";\r\nimport ShowPosts from \"../ShowPosts/ShowPosts\";\r\nimport Category from \"../Category/Category\";\r\nimport CreateCategory from \"../CreateCategory/CreateCategory\";\r\nimport CreatePost from \"../CreatePost/CreatePost\";\r\nimport base_url from '../../API';\r\n\r\nconst Blog = ({blogs, user, setErrorMessage, setMessage}) => {\r\n    const id = useParams().id;\r\n\r\n    const [blog, setBlog] = useState(null);\r\n    const [posts, setPosts] = useState([]);\r\n    const history = useHistory();\r\n\r\n    const getPosts = async (id) => {\r\n        const params = {\r\n            id : id\r\n          }\r\n        const data = await axios.get(`${base_url}/blog/posts`, {params : params});\r\n        setPosts(data.data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setBlog(blogs[id]);\r\n        getPosts(blogs[id].id);      \r\n    },[id]);\r\n\r\n    if (blog == null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        \r\n        <div id=\"blog\">\r\n            {\r\n                user !== null && blogs[id].id === user.userForToken.bid ?\r\n\r\n            \r\n            <nav>\r\n                <Link to={`/blog/${id}/createCategory`}>Create Category</Link>\r\n                <Link to={`/blog/${id}/createPost`}>Create Post</Link>\r\n            </nav>\r\n            :\r\n            null\r\n            }\r\n            <Switch>\r\n                <Route exact path={`/blog/${id}`} component={() => <ShowPosts blog={blog} posts={posts} id={id} />} />\r\n                <Route path={`/blog/${id}/post/:id`} component={() => <Post posts={posts} bid={id} /> } />\r\n                <Route path={`/blog/${id}/category/:id`} component={() => <Category />} />\r\n                <Route path={`/blog/${id}/createCategory`} component={()=> <CreateCategory bid={blog.id} history={history} user={user} setErrorMessage={setErrorMessage} setMessage={setMessage} /> } />\r\n                <Route path={`/blog/${id}/createPost`} component={()=> <CreatePost bid={blog.id} history={history} user={user} setErrorMessage={setErrorMessage} setMessage={setMessage} /> } />\r\n            </Switch>\r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Blog;","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\ShowPosts\\ShowPosts.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Posts\\Posts.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Post\\Post.js",["69"],"import React, { useState, useEffect } from \"react\";\r\nimport './Post.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport base_url from \"../../API\";\r\n\r\nconst Post = ({posts, bid}) => {\r\n    const id = useParams().id;\r\n\r\n    const [post, setPost] = useState(null);\r\n    const [categories, setCategories] = useState(null);\r\n\r\n\r\n    const getCategories = async () => {\r\n        try {\r\n            \r\n            const params = {\r\n                id : posts[id].id\r\n            }\r\n            const data = await axios.get(`${base_url}/blog/categories`, { params : params });\r\n            setCategories(data.data);\r\n            setPost(posts[id]);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (posts.length !== 0) {\r\n            getCategories();\r\n        }\r\n    }, [])\r\n\r\n    if (post == null || categories == null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div id=\"post\">\r\n            <div className=\"container\">\r\n                <ul>\r\n                    {categories.map((c, index) => {\r\n\r\n                        return (\r\n                            <li key={c.category.id}><Link  to={`/blog/${bid}/category/${c.category.id}`}>{c.category.name}</Link></li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n                <div>\r\n                    <h1>{post.title}</h1>\r\n                    <p>{post.content}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post;","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Category\\Category.js",["70"],"import React, { useState, useEffect } from \"react\";\r\nimport './Category.css';\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport base_url from \"../../API\";\r\n\r\nconst Category = () => {\r\n    const id = useParams().id;\r\n\r\n    const [category, setCategory] = useState(null);\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    const getPosts = async (cid) => {\r\n        try {\r\n            const params = {\r\n                id : cid\r\n            }\r\n            const data = await axios.get(`${base_url}/blog/specificposts`, { params: params });\r\n            const p = data.data.map(cat => {\r\n                return cat.post\r\n            })\r\n            setPosts(p);\r\n            setCategory(data.data[0].category.name)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(()=> {\r\n        getPosts(id);\r\n        return () => {\r\n            setCategory(null);\r\n            setPosts([]);\r\n          };\r\n    }, []);\r\n\r\n    if (posts.length === 0 || Category === null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div id=\"category\">\r\n            <h3>Category: </h3> <p> {category}</p>\r\n            <div>\r\n                {posts.map((post, index) => {\r\n                    return (\r\n                        <div key={index}>\r\n                            <h1>{post.title}</h1>\r\n                            <p>{post.content}</p>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Category;","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\CreateCategory\\CreateCategory.js",["71"],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\CreatePost\\CreatePost.js",["72","73"],"C:\\Users\\User\\Desktop\\blogapp\\src\\API.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\LogIn\\LogIn.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Notification\\Notification.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":31,"column":7,"nodeType":"80","endLine":31,"endColumn":11,"suggestions":"81"},{"ruleId":"78","severity":1,"message":"82","line":33,"column":8,"nodeType":"80","endLine":33,"endColumn":10,"suggestions":"83"},{"ruleId":"78","severity":1,"message":"84","line":35,"column":8,"nodeType":"80","endLine":35,"endColumn":10,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":38,"column":23,"nodeType":"88","messageId":"89","endLine":38,"endColumn":27},{"ruleId":"78","severity":1,"message":"90","line":39,"column":8,"nodeType":"80","endLine":39,"endColumn":10,"suggestions":"91"},{"ruleId":"86","severity":1,"message":"87","line":57,"column":23,"nodeType":"88","messageId":"89","endLine":57,"endColumn":27},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'blogs'. Either include it or remove the dependency array. If 'setBlog' needs the current value of 'blogs', you can also switch to useReducer instead of useState and read 'blogs' in the reducer.","ArrayExpression",["94"],"React Hook useEffect has missing dependencies: 'getCategories' and 'posts.length'. Either include them or remove the dependency array.",["95"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["96"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'bid'. Either include it or remove the dependency array.",["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [blogs, id]",{"range":"106","text":"107"},"Update the dependencies array to be: [getCategories, posts.length]",{"range":"108","text":"109"},"Update the dependencies array to be: [id]",{"range":"110","text":"111"},"Update the dependencies array to be: [bid]",{"range":"112","text":"113"},[1043,1047],"[blogs, id]",[907,909],"[getCategories, posts.length]",[977,979],"[id]",[1217,1219],"[bid]"]