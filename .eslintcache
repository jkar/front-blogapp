[{"C:\\Users\\User\\Desktop\\blogapp\\src\\index.js":"1","C:\\Users\\User\\Desktop\\blogapp\\src\\App.js":"2","C:\\Users\\User\\Desktop\\blogapp\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Main.js":"4","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Header\\Header.js":"5","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Blog\\Blog.js":"6","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\ShowPosts\\ShowPosts.js":"7","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Posts\\Posts.js":"8","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Post\\Post.js":"9","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Category\\Category.js":"10","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\CreateCategory\\CreateCategory.js":"11","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\CreatePost\\CreatePost.js":"12"},{"size":544,"mtime":1612286648619,"results":"13","hashOfConfig":"14"},{"size":901,"mtime":1612430892330,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":204,"mtime":1612430630927,"results":"17","hashOfConfig":"14"},{"size":475,"mtime":1612472561763,"results":"18","hashOfConfig":"14"},{"size":1975,"mtime":1612446013589,"results":"19","hashOfConfig":"14"},{"size":526,"mtime":1612434688672,"results":"20","hashOfConfig":"14"},{"size":785,"mtime":1612443455701,"results":"21","hashOfConfig":"14"},{"size":1521,"mtime":1612439121554,"results":"22","hashOfConfig":"14"},{"size":1429,"mtime":1612443984217,"results":"23","hashOfConfig":"14"},{"size":1048,"mtime":1612444722432,"results":"24","hashOfConfig":"14"},{"size":2740,"mtime":1612447041746,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"dhisjs",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"C:\\Users\\User\\Desktop\\blogapp\\src\\index.js",[],["55","56"],"C:\\Users\\User\\Desktop\\blogapp\\src\\App.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Main.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Header\\Header.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Blog\\Blog.js",["57"],"import React, {useState, useEffect} from \"react\";\r\nimport { Route, Switch, Link, useHistory } from 'react-router-dom';\r\nimport { useParams } from \"react-router-dom\";\r\nimport './Blog.css';\r\nimport axios from \"axios\";\r\nimport Post from \"../Post/Post\";\r\nimport ShowPosts from \"../ShowPosts/ShowPosts\";\r\nimport Category from \"../Category/Category\";\r\nimport CreateCategory from \"../CreateCategory/CreateCategory\";\r\nimport CreatePost from \"../CreatePost/CreatePost\";\r\n\r\nconst Blog = ({blogs}) => {\r\n    const id = useParams().id;\r\n\r\n\r\n    const [blog, setBlog] = useState(null);\r\n    const [posts, setPosts] = useState([]);\r\n    const history = useHistory();\r\n\r\n    const getPosts = async (id) => {\r\n        const params = {\r\n            id : id\r\n          }\r\n        const data = await axios.get('http://localhost:3001/blog/posts', {params : params});\r\n        setPosts(data.data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setBlog(blogs[id]);\r\n        getPosts(blogs[id].id);      \r\n    },[id]);\r\n\r\n    if (blog == null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        \r\n        <div id=\"blog\">\r\n            <nav>\r\n                <Link to={`/blog/${id}/createCategory`}>Create Category</Link>\r\n                <Link to={`/blog/${id}/createPost`}>Create Post</Link>\r\n            </nav>\r\n            <Switch>\r\n                <Route exact path={`/blog/${id}`} component={() => <ShowPosts blog={blog} posts={posts} id={id} />} />\r\n                <Route path={`/blog/${id}/post/:id`} component={() => <Post posts={posts} bid={id} /> } />\r\n                <Route path={`/blog/${id}/category/:id`} component={() => <Category />} />\r\n                <Route path={`/blog/${id}/createCategory`} component={()=> <CreateCategory bid={blog.id} history={history} /> } />\r\n                <Route path={`/blog/${id}/createPost`} component={()=> <CreatePost bid={blog.id} history={history} /> } />\r\n            </Switch>\r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Blog;","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\ShowPosts\\ShowPosts.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Posts\\Posts.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Post\\Post.js",["58"],"import React, { useState, useEffect } from \"react\";\r\nimport './Post.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Post = ({posts, bid}) => {\r\n    const id = useParams().id;\r\n\r\n    const [post, setPost] = useState(null);\r\n    const [categories, setCategories] = useState(null);\r\n\r\n\r\n    const getCategories = async () => {\r\n        try {\r\n            \r\n            const params = {\r\n                id : posts[id].id\r\n            }\r\n            const data = await axios.get('http://localhost:3001/blog/categories', { params : params });\r\n            setCategories(data.data);\r\n            setPost(posts[id]);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getCategories();\r\n    }, [])\r\n\r\n    if (post == null || categories == null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div id=\"post\">\r\n            <div className=\"container\">\r\n                <ul>\r\n                    {categories.map((c, index) => {\r\n\r\n                        return (\r\n                            <li key={c.category.id}><Link  to={`/blog/${bid}/category/${c.category.id}`}>{c.category.name}</Link></li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n                <div>\r\n                    <h1>{post.title}</h1>\r\n                    <p>{post.content}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post;","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Category\\Category.js",["59","60"],"import React, { useState, useEffect } from \"react\";\r\nimport './Category.css';\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Category = () => {\r\n    const id = useParams().id;\r\n\r\n    const [category, setCategory] = useState(null);\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    const getPosts = async (cid) => {\r\n        try {\r\n            const params = {\r\n                id : cid\r\n            }\r\n            const data = await axios.get('http://localhost:3001/blog/specificposts', { params: params });\r\n            const p = data.data.map(cat => {\r\n                return cat.post\r\n            })\r\n            setPosts(p);\r\n            setCategory(data.data[0].category.name)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(()=> {\r\n        getPosts(id);\r\n    }, []);\r\n\r\n    if (posts.length == 0 || Category === null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div id=\"category\">\r\n            <h3>Category: </h3> <p> {category}</p>\r\n            <div>\r\n                {posts.map((post, index) => {\r\n                    return (\r\n                        <div key={index}>\r\n                            <h1>{post.title}</h1>\r\n                            <p>{post.content}</p>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Category;","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\CreateCategory\\CreateCategory.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\CreatePost\\CreatePost.js",["61","62"],"import React, { useState, useEffect } from \"react\";\r\nimport './CreatePost.css';\r\nimport axios from \"axios\";\r\n\r\nconst CreatePost = ({ bid, history }) => {\r\n    const [allcids, setAllcids] = useState(null);\r\n    const [selectedcids, setSelectedcids] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n\r\n    const getCategories = async (id) => {\r\n        try {\r\n            const params = {\r\n                id : id\r\n            }\r\n            const data = await axios.get('http://localhost:3001/user/categories', { params : params } );\r\n            setAllcids(data.data);\r\n             \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    };\r\n    \r\n    useEffect(() => {\r\n        getCategories(bid);\r\n    }, []);\r\n\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const data = await axios.post('http://localhost:3001/user/createpost', {\r\n                \"title\": title,\r\n                \"content\": content,\r\n                \"cid\": selectedcids\r\n            });\r\n            history.push('/');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    const handleCheckboxes = (e) => {\r\n        if(e.target.checked) {\r\n            const sc = [...selectedcids, parseInt(e.target.value)];\r\n            setSelectedcids(sc)\r\n        } else {\r\n            let sc = [...selectedcids];\r\n            sc = sc.filter(el => el !== parseInt(e.target.value));\r\n            setSelectedcids(sc);\r\n        }\r\n    };\r\n\r\n    const handleTitleChange = (e) => {\r\n        setTitle(e.target.value);\r\n    };\r\n\r\n    const handleContentChange = (e) => {\r\n        setContent(e.target.value);\r\n    };\r\n\r\n    if (allcids === null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div id=\"create-post\">\r\n            <h2>Create Post</h2>\r\n            <form onSubmit={submit}>\r\n                <h3>Select Categories</h3>\r\n                {allcids.map((c, index) => {\r\n                    return (\r\n                        <div key={index}>\r\n                            <input type=\"checkbox\" onChange={handleCheckboxes} id={index} name={c.name} value={c.id}></input>\r\n                            <label>{c.name}</label>\r\n                        </div>\r\n                    )\r\n                })}\r\n                <br />\r\n                <label>Title</label>\r\n                <input type=\"text\" value={title} onChange={handleTitleChange} />\r\n                <label>Content</label>\r\n                <input type=\"text\" value={content} onChange={handleContentChange} />\r\n                <input type=\"submit\" name=\"Submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CreatePost;",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":31,"column":7,"nodeType":"69","endLine":31,"endColumn":11,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"71","line":30,"column":8,"nodeType":"69","endLine":30,"endColumn":10,"suggestions":"72"},{"ruleId":"67","severity":1,"message":"73","line":30,"column":8,"nodeType":"69","endLine":30,"endColumn":10,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":32,"column":22,"nodeType":"77","messageId":"78","endLine":32,"endColumn":24},{"ruleId":"67","severity":1,"message":"79","line":27,"column":8,"nodeType":"69","endLine":27,"endColumn":10,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":33,"column":19,"nodeType":"83","messageId":"84","endLine":33,"endColumn":23},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'blogs'. Either include it or remove the dependency array. If 'setBlog' needs the current value of 'blogs', you can also switch to useReducer instead of useState and read 'blogs' in the reducer.","ArrayExpression",["87"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["88"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["89"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'bid'. Either include it or remove the dependency array.",["90"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [blogs, id]",{"range":"99","text":"100"},"Update the dependencies array to be: [getCategories]",{"range":"101","text":"102"},"Update the dependencies array to be: [id]",{"range":"103","text":"104"},"Update the dependencies array to be: [bid]",{"range":"105","text":"106"},[985,989],"[blogs, id]",[832,834],"[getCategories]",[855,857],"[id]",[800,802],"[bid]"]