[{"C:\\Users\\User\\Desktop\\blogapp\\src\\index.js":"1","C:\\Users\\User\\Desktop\\blogapp\\src\\App.js":"2","C:\\Users\\User\\Desktop\\blogapp\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Main.js":"4","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Header\\Header.js":"5","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Blog\\Blog.js":"6","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\ShowPosts\\ShowPosts.js":"7","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Posts\\Posts.js":"8","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Post\\Post.js":"9","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Category\\Category.js":"10","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\CreateCategory\\CreateCategory.js":"11","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\CreatePost\\CreatePost.js":"12","C:\\Users\\User\\Desktop\\blogapp\\src\\API.js":"13","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\LogIn\\LogIn.js":"14","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Notification\\Notification.js":"15","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\EditPost\\EditPost.js":"16"},{"size":544,"mtime":1612286648619,"results":"17","hashOfConfig":"18"},{"size":1871,"mtime":1613235718438,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":204,"mtime":1612430630927,"results":"21","hashOfConfig":"18"},{"size":756,"mtime":1613062580380,"results":"22","hashOfConfig":"18"},{"size":2607,"mtime":1613399544042,"results":"23","hashOfConfig":"18"},{"size":565,"mtime":1613249704261,"results":"24","hashOfConfig":"18"},{"size":961,"mtime":1613249629382,"results":"25","hashOfConfig":"18"},{"size":1596,"mtime":1613139439297,"results":"26","hashOfConfig":"18"},{"size":1552,"mtime":1613141711743,"results":"27","hashOfConfig":"18"},{"size":2206,"mtime":1613229267279,"results":"28","hashOfConfig":"18"},{"size":4284,"mtime":1613398685916,"results":"29","hashOfConfig":"18"},{"size":69,"mtime":1613042070123,"results":"30","hashOfConfig":"18"},{"size":2513,"mtime":1613235362160,"results":"31","hashOfConfig":"18"},{"size":693,"mtime":1613232273874,"results":"32","hashOfConfig":"18"},{"size":5058,"mtime":1613401727903,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"dhisjs",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Desktop\\blogapp\\src\\index.js",[],["70","71"],"C:\\Users\\User\\Desktop\\blogapp\\src\\App.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Main.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Header\\Header.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Blog\\Blog.js",["72"],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\ShowPosts\\ShowPosts.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Posts\\Posts.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Post\\Post.js",["73"],"import React, { useState, useEffect } from \"react\";\r\nimport './Post.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport base_url from \"../../API\";\r\n\r\nconst Post = ({posts, bid}) => {\r\n    const id = useParams().id;\r\n\r\n    const [post, setPost] = useState(null);\r\n    const [categories, setCategories] = useState(null);\r\n\r\n\r\n    const getCategories = async () => {\r\n        try {\r\n            \r\n            const params = {\r\n                id : posts[id].id\r\n            }\r\n            const data = await axios.get(`${base_url}/blog/categories`, { params : params });\r\n            setCategories(data.data);\r\n            setPost(posts[id]);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (posts.length !== 0) {\r\n            getCategories();\r\n        }\r\n    }, [])\r\n\r\n    if (post == null || categories == null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div id=\"post\">\r\n            <div className=\"container\">\r\n                <ul>\r\n                    {categories.map((c, index) => {\r\n\r\n                        return (\r\n                            <li key={c.category.id}><Link  to={`/blog/${bid}/category/${c.category.id}`}>{c.category.name}</Link></li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n                <div>\r\n                    <h1>{post.title}</h1>\r\n                    <p>{post.content}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post;","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Category\\Category.js",["74"],"import React, { useState, useEffect } from \"react\";\r\nimport './Category.css';\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport base_url from \"../../API\";\r\n\r\nconst Category = () => {\r\n    const id = useParams().id;\r\n\r\n    const [category, setCategory] = useState(null);\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    const getPosts = async (cid) => {\r\n        try {\r\n            const params = {\r\n                id : cid\r\n            }\r\n            const data = await axios.get(`${base_url}/blog/specificposts`, { params: params });\r\n            const p = data.data.map(cat => {\r\n                return cat.post\r\n            })\r\n            setPosts(p);\r\n            setCategory(data.data[0].category.name)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(()=> {\r\n        getPosts(id);\r\n        return () => {\r\n            setCategory(null);\r\n            setPosts([]);\r\n          };\r\n    }, []);\r\n\r\n    if (posts.length === 0 || Category === null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div id=\"category\">\r\n            <h3>Category: </h3> <p> {category}</p>\r\n            <div>\r\n                {posts.map((post, index) => {\r\n                    return (\r\n                        <div key={index}>\r\n                            <h1>{post.title}</h1>\r\n                            <p>{post.content}</p>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Category;","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\CreateCategory\\CreateCategory.js",["75"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport './CreateCategory.css';\r\nimport axios from \"axios\";\r\nimport base_url from \"../../API\";\r\n\r\nconst CreateCategory = ({bid, history, user, setMessage, setErrorMessage}) => {\r\n    const [name, setName] = useState('');\r\n    const _isMounted = useRef(true); // Initial value _isMounted = true\r\n\r\n    useEffect(()=> {\r\n        return () => { // ComponentWillUnmount in Class Component\r\n            _isMounted.current = false;\r\n            setName('');\r\n        }\r\n    },[]);\r\n\r\n    const changeName = (e) => {\r\n        setName(e.target.value);\r\n    };\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        if (_isMounted.current) {\r\n            try {\r\n                if (name === '') {\r\n                    setErrorMessage('Name is empty.. please add a name');\r\n                    setTimeout(() => {\r\n                        setErrorMessage('');\r\n                    }, 1500);\r\n                    return\r\n                }\r\n                const config = {\r\n                    headers: {\r\n                        'Authorization' : `Bearer ${user.token}`\r\n\r\n                    }\r\n                };\r\n                const data = await axios.post(`${base_url}/user/createcategory`, {\r\n                    \"id\": bid,\r\n                    \"name\": name\r\n                }, config);\r\n                setMessage('Category has been created successfully!');\r\n                setTimeout(() => {\r\n                    setMessage('', history.push('/'));\r\n                }, 2000);\r\n            } catch (error) {\r\n                setErrorMessage('Category has not been created..');\r\n                setTimeout(()=> {\r\n                    setErrorMessage('');\r\n                }, 2000);\r\n                console.log(error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div id=\"create-category\">\r\n            <h2>Create Category</h2>\r\n            <form onSubmit={submit}>\r\n                <label>Name</label>\r\n                <input type=\"text\" onChange={changeName} value={name} />\r\n                <input type=\"submit\" name=\"Submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default CreateCategory;","C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\CreatePost\\CreatePost.js",["76","77"],"C:\\Users\\User\\Desktop\\blogapp\\src\\API.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\LogIn\\LogIn.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\Notification\\Notification.js",[],"C:\\Users\\User\\Desktop\\blogapp\\src\\Components\\EditPost\\EditPost.js",["78","79"],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":32,"column":7,"nodeType":"86","endLine":32,"endColumn":11,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"88","line":33,"column":8,"nodeType":"86","endLine":33,"endColumn":10,"suggestions":"89"},{"ruleId":"84","severity":1,"message":"90","line":35,"column":8,"nodeType":"86","endLine":35,"endColumn":10,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":38,"column":23,"nodeType":"94","messageId":"95","endLine":38,"endColumn":27},{"ruleId":"84","severity":1,"message":"96","line":39,"column":8,"nodeType":"86","endLine":39,"endColumn":10,"suggestions":"97"},{"ruleId":"92","severity":1,"message":"93","line":57,"column":23,"nodeType":"94","messageId":"95","endLine":57,"endColumn":27},{"ruleId":"84","severity":1,"message":"98","line":30,"column":8,"nodeType":"86","endLine":30,"endColumn":10,"suggestions":"99"},{"ruleId":"92","severity":1,"message":"93","line":72,"column":23,"nodeType":"94","messageId":"95","endLine":72,"endColumn":27},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'blogs'. Either include it or remove the dependency array. If 'setBlog' needs the current value of 'blogs', you can also switch to useReducer instead of useState and read 'blogs' in the reducer.","ArrayExpression",["102"],"React Hook useEffect has missing dependencies: 'getCategories' and 'posts.length'. Either include them or remove the dependency array.",["103"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["104"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'bid'. Either include it or remove the dependency array.",["105"],"React Hook useEffect has missing dependencies: 'bid', 'getCategories', 'id', and 'posts'. Either include them or remove the dependency array. If 'SetPost' needs the current value of 'posts', you can also switch to useReducer instead of useState and read 'posts' in the reducer.",["106"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [blogs, id]",{"range":"117","text":"118"},"Update the dependencies array to be: [getCategories, posts.length]",{"range":"119","text":"120"},"Update the dependencies array to be: [id]",{"range":"121","text":"122"},"Update the dependencies array to be: [bid]",{"range":"123","text":"124"},"Update the dependencies array to be: [bid, getCategories, id, posts]",{"range":"125","text":"126"},[1089,1093],"[blogs, id]",[907,909],"[getCategories, posts.length]",[977,979],"[id]",[1217,1219],"[bid]",[988,990],"[bid, getCategories, id, posts]"]